{"version":3,"sources":["webpack://visiosto.fi/./src/components/LayoutPost.jsx","webpack://visiosto.fi/./src/templates/blog-post.jsx"],"names":["PageTitle","styled","props","theme","layout","marginPhone","devices","phoneL","marginTablet","tablet","PostMeta","PostAuthor","listenColorScheme","GlobalStyle","Head","Header","title","datetime","frontmatter","date","author","children","Footer","PostDiv","marginDesktop","Page","post","data","markdownRemark","LayoutPost","lang","pageContext","pageKey","key","dangerouslySetInnerHTML","__html","html","Intl","locale","Theme"],"mappings":"4OAaMA,EAAYC,mBAAH,iEAAGA,CAAH,gKACC,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,eAIxB,SAACH,GAAD,OAAWA,EAAMC,MAAMG,QAAQC,UACnC,SAACL,GAAD,OAAWA,EAAMC,MAAMC,OAAOI,gBAI1B,SAACN,GAAD,OAAWA,EAAMC,MAAMG,QAAQG,UACnC,SAACP,GAAD,OAAWA,EAAMC,MAAMC,OAAOI,gBAK1CE,EAAWT,oBAAH,gEAAGA,CAAH,6GAIQ,SAACC,GAAD,OAAWA,EAAMC,MAAMG,QAAQC,UAI/B,SAACL,GAAD,OAAWA,EAAMC,MAAMG,QAAQG,UAK/CE,EAAaV,qBAAH,kEAAGA,CAAH,+BAKhB,WAAgBC,GAGd,OAFAU,SAGE,gCACE,gBAACC,EAAA,EAAD,MACA,gBAACC,EAAA,EAASZ,GACV,gBAACa,EAAA,EAAWb,GACZ,4BACE,+BACE,8BACE,gBAACF,EAAD,KAAYE,EAAMc,OAClB,gBAACN,EAAD,KACE,wBAAMO,SAAUf,EAAMgB,YAAYD,UAAWf,EAAMgB,YAAYC,MAC/D,gBAACR,EAAD,KAAaT,EAAMgB,YAAYE,UAGnC,2BAAMlB,EAAMmB,YAGhB,gBAACC,EAAA,EAAWpB,K,UCxDZqB,EAAUtB,oBAAH,6DAAGA,CAAH,iGACG,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,eAExB,SAACH,GAAD,OAAWA,EAAMC,MAAMG,QAAQC,UACnC,SAACL,GAAD,OAAWA,EAAMC,MAAMC,OAAOI,gBAG1B,SAACN,GAAD,OAAWA,EAAMC,MAAMG,QAAQG,UACnC,SAACP,GAAD,OAAWA,EAAMC,MAAMC,OAAOoB,iBAI1CC,EAAO,SAACvB,GAAW,IACCwB,EAASxB,EAAMyB,KAA/BC,eAER,OACE,gBAACC,EAAD,CACEb,MAAOU,EAAKR,YAAYF,MACxBE,YAAaQ,EAAKR,YAClBY,KAAM5B,EAAM6B,YAAYD,KACxBE,QAAS9B,EAAM6B,YAAYE,KAE3B,gBAACV,EAAD,CAASW,wBAAyB,CAAEC,OAAQT,EAAKU,UAavD,EARiB,SAAClC,GAAD,OACf,gBAACmC,EAAA,EAAD,CAAMC,OAAQpC,EAAM6B,YAAYD,MAC9B,gBAACS,EAAA,EAAD,KACE,gBAACd,EAASvB","file":"component---src-templates-blog-post-jsx-209320fd03539ac19f6e.js","sourcesContent":["// Copyright (c) 2021 Visiosto oy\n// Licensed under the MIT License\n\nimport React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport Footer from './Footer';\nimport GlobalStyle from './GlobalStyle';\nimport Head from './Head';\nimport Header from './Header';\n\nimport listenColorScheme from '../utils/listenColorScheme';\n\nconst PageTitle = styled.h1`\n  margin: 2em ${(props) => props.theme.layout.marginPhone};\n  font-size: 2rem;\n  text-align: center;\n\n  @media screen and ${(props) => props.theme.devices.phoneL} {\n    margin: 2em ${(props) => props.theme.layout.marginTablet};\n    font-size: 3rem;\n  }\n\n  @media screen and ${(props) => props.theme.devices.tablet} {\n    margin: 2em ${(props) => props.theme.layout.marginTablet};\n    font-size: 3rem;\n  }\n`;\n\nconst PostMeta = styled.div`\n  margin: 2em 0;\n  text-align: center;\n\n  @media screen and ${(props) => props.theme.devices.phoneL} {\n    margin: 2em 0;\n  }\n\n  @media screen and ${(props) => props.theme.devices.tablet} {\n    margin: 2em 0;\n  }\n`;\n\nconst PostAuthor = styled.span`\n  clear: both;\n  display: block;\n`;\n\nexport default (props) => {\n  listenColorScheme();\n\n  return (\n    <>\n      <GlobalStyle />\n      <Head {...props} />\n      <Header {...props} />\n      <main>\n        <section>\n          <header>\n            <PageTitle>{props.title}</PageTitle>\n            <PostMeta>\n              <time datetime={props.frontmatter.datetime}>{props.frontmatter.date}</time>\n              <PostAuthor>{props.frontmatter.author}</PostAuthor>\n            </PostMeta>\n          </header>\n          <div>{props.children}</div>\n        </section>\n      </main>\n      <Footer {...props} />\n    </>\n  );\n};\n","// Copyright (c) 2021 Visiosto oy\n// Licensed under the MIT License\n\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Intl from '../components/Intl';\nimport LayoutPost from '../components/LayoutPost';\nimport Theme from '../components/Theme';\n\nconst PostDiv = styled.div`\n  margin: 1em ${(props) => props.theme.layout.marginPhone};\n\n  @media screen and ${(props) => props.theme.devices.phoneL} {\n    margin: 1em ${(props) => props.theme.layout.marginTablet};\n  }\n\n  @media screen and ${(props) => props.theme.devices.tablet} {\n    margin: 1em ${(props) => props.theme.layout.marginDesktop};\n  }\n`;\n\nconst Page = (props) => {\n  const { markdownRemark: post } = props.data;\n\n  return (\n    <LayoutPost\n      title={post.frontmatter.title}\n      frontmatter={post.frontmatter}\n      lang={props.pageContext.lang}\n      pageKey={props.pageContext.key}\n    >\n      <PostDiv dangerouslySetInnerHTML={{ __html: post.html }} />\n    </LayoutPost>\n  );\n};\n\nconst BlogPost = (props) => (\n  <Intl locale={props.pageContext.lang}>\n    <Theme>\n      <Page {...props} />\n    </Theme>\n  </Intl>\n);\n\nexport default BlogPost;\n\nexport const pageQuery = graphql`\n  query BlogPostQuery($path: String, $momentJsLocale: String) {\n    markdownRemark(fields: { slug: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        author\n        datetime: date\n        date: date(formatString: \"LL\", locale: $momentJsLocale)\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}